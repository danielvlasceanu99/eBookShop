@model EBookShop.ViewModels.GetBookViewModel
@{
    ViewData["Title"] = "Checkout";
}

<div class="align-items-center">
    <div class="row">
        <div class="col-md-5">
            <h3>Card Info</h3>
            <hr />
            <br />
            <form asp-controller="GetBook" asp-action="GetBook" method="post" onsubmit="return validateForm()" name="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="@Model.paymentInfo.CardHolderName">Cardholder Name</label>
                    <input asp-for="@Model.paymentInfo.CardHolderName" type="text"
                           placeholder="Enter Cardholder Name" required class="form-control">
                    <span asp-validation-for="@Model.paymentInfo.CardHolderName" class="text-danger"></span>
                </div>
                <br />
                <div class="form-group">
                    <label asp-for="@Model.paymentInfo.CardNumber">Credit Card Number</label>
                    <input asp-for="@Model.paymentInfo.CardNumber" type="text" class="form-control" id="cardNumber"
                           required onkeypress="return allowNumbersAndSpaces(event)" placeholder="0000 0000 0000 0000"/>
                    <span asp-validation-for="@Model.paymentInfo.CardNumber" class="text-danger" id="noErr"></span>
                </div>
                <br />
                <div class="row">
                    <div class="form-group col-md-5">
                        <label asp-for="@Model.paymentInfo.ExpiryDate">Expiry date</label>
                        <input asp-for="@Model.paymentInfo.ExpiryDate" type="text" class="form-control"  id="expDate"
                               required onkeypress="return allowNumbersAndSlesh(event)" placeholder="mm/yy"/>
                        <span asp-validation-for="@Model.paymentInfo.ExpiryDate" class="text-danger" id="dateErr"></span>
                    </div>
                    <div class="col-md-2"></div>
                    <div class="form-group col-md-5">
                        <label asp-for="@Model.paymentInfo.CVV">CVV</label>
                        <input asp-for="@Model.paymentInfo.CVV" type="number" maxlength="3"
                               placeholder="CVV" required class="form-control"
                               oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);">
                        <span asp-validation-for="@Model.paymentInfo.CVV" class="text-danger"></span>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12 d-flex justify-content-md-between align-items-md-start">
                        @{decimal total = 0; }
                        @for (int i = 0; i < Model.books.Count(); i++)
                        {
                            total += ((decimal)Model.books[i].Book.Price) -
                                (((decimal)Model.books[i].Book.Price) * Model.books[i].Book.Discount);
                        }
                        <input type="submit" class="btn btn-secondary mr-3"
                               value="Pay $@(String.Format("{0:#,##.##}", total))" />
                        <a asp-controller="Profile" asp-action="Cart" class="btn btn-secondary">
                            Cancel
                        </a>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-5">
            <h3 class="text-right">The purchase contains</h3>
            <hr />
            @foreach (Cart item in Model.books)
            {
                <div class="text-justify media p-2">
                    @{string srcBook = "https://drive.google.com/uc?export=view&id=" + item.Book.ImageId; }
                    <img src=@srcBook class="align-self-center mr-3" style="width:67px; height:80px">
                    <div class="media-body">
                        <h5 class="d-flex justify-content-md-between align-items-md-start">
                            @item.Book.Title
                            @if (item.Book.Discount != 0)
                            {
                                <span>
                                    <span class="badge">
                                        <del class="text-danger">$@item.Book.Price</del>
                                        <sup class="text-danger">-@(String.Format("{0:#,##}", item.Book.Discount * 100))%</sup>
                                        $@(String.Format("{0:#,##.##}", (float)(1 - item.Book.Discount) * item.Book.Price))
                                    </span>
                                </span>
                            }
                            else
                            {
                                <span class="badge">$@item.Book.Price</span>
                            }
                        </h5>
                        <h5><small>by @item.Book.Author.Name</small></h5>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section GetBookScript{
    <script>
        function allowNumbersAndSpaces(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            //allowing numbers, left key(37) right key(39) backspace(8) delete(46) and spaces(32)
            var length = $('#cardNumber').val().length;
            if (((charCode == 37 || charCode == 39 || charCode == 8 || charCode == 46 || charCode == 32) || !(charCode > 31 && (charCode < 48 || charCode > 57))) && length < 19) {
                return true;
            }
            else {
                return false;
            }
        }
        //put hyphens atomatically
        $(document).ready(function () {

            $('#cardNumber').on('keypress', function () {
                var temp = $(this).val();
                if (temp.length == 4 || temp.length == 9 || temp.length == 14) {
                    $('#cardNumber').val(temp + ' ');
                }
            });
        });

        function allowNumbersAndSlesh(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            //allowing numbers, left key(37) right key(39) backspace(8) delete(46) and slesh(47)
            var length = $('#expDate').val().length;
            if (((charCode == 37 || charCode == 39 || charCode == 8 || charCode == 46 || charCode == 47) || !(charCode > 31 && (charCode < 48 || charCode > 57))) && length < 5) {
                return true;
            }
            else {
                return false;
            }
        }
        //put hyphens atomatically
        $(document).ready(function () {

            $('#expDate').on('keypress', function () {
                var temp = $(this).val();
                if (temp.length == 2) {
                    $('#expDate').val(temp + '/');
                }
            });
        });

        function validateForm() {
            console.log("total", vaidateCardNumber() && vaidateExpireDate());
            console.log("Data", vaidateExpireDate());
            console.log("Numar", vaidateCardNumber());
            document.getElementById("dateErr").innerText = "";
            document.getElementById("noErr").innerText = "";
            //alert("sdsadasdsa")
            return vaidateCardNumber() && vaidateExpireDate();
            //return vaidateExpireDate();
        }

        function vaidateCardNumber() {
            var cardNumber = document.getElementById("cardNumber").value;
            let error = document.getElementById("noErr");

            cardNumber = cardNumber.replace(/ /g, '');
            if (cardNumber.lenght < 16) {
                error.innerText = "Invalid card number"
                return false;
            } else {
                var sum = 0;
                for (var i = 0; i < 15; i++) {
                    var temp = (parseInt(cardNumber[i], 10));
                    if(i % 2 == 0){
                        temp *= 2;
                    }
                    sum += temp >= 10 ? temp - 9 : temp;
                }
                var check = (sum * 9) % 10;
                if (check === parseInt(cardNumber[15], 10)) {
                    return true;
                } else {
                    error.innerText = "Incorect card number"
                    return false;
                }
            }
        }
        function vaidateExpireDate() {
            var cardNumber = document.getElementById("expDate").value;
            let error = document.getElementById("dateErr");

            cardNumber = cardNumber.replace('/', '');
            if (cardNumber.lenght < 4) {
                error.innerText = "Invalid expire date"
                return false;
            } else {
                var res = document.getElementById("expDate").value.split("/");
                if (parseInt(res[0]) > 12 || parseInt(res[1]) > (new Date().getFullYear() + 4) % 100) {
                    error.innerText = "Invalid expire date"
                    return false;
                } else {
                    var res = document.getElementById("expDate").value.split("/");
                    var yr = new Date().getFullYear();
                    yr = yr % 100
                    if (yr < parseInt(res[1])) {
                        console.log(yr, parseInt(res[1]));
                        return true;
                    } else if (yr == parseInt(res[1])) {
                        var month = new Date().getMonth() + 1;
                        if (month <= parseInt(res[0])) {
                            return true;
                        }
                        else {
                            error.innerText = "Expired card";
                            return false;
                        }
                    }
                    else {
                        error.innerText = "Expired card";
                        return false;
                    }
                }
            }
        }
    </script>
}